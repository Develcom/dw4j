package com.develcom.gui;

import com.develcom.dao.Expediente;
import com.develcom.dao.ManejoSesion;
import com.develcom.gui.administracion.AdministrarCategoria;
import com.develcom.gui.administracion.AdministrarComboDatosAdicionales;
import com.develcom.gui.administracion.AdministrarComboExpediente;
import com.develcom.gui.administracion.AdministrarFicha;
import com.develcom.gui.administracion.AdministrarIndices;
import com.develcom.gui.administracion.AdministrarLibreria;
import com.develcom.gui.administracion.AdministrarSubCategoria;
import com.develcom.gui.administracion.AdministrarTipoDocumento;
import com.develcom.gui.administracion.AdministrarUsuarios;
import com.develcom.gui.administracion.AdministraDatosAdicionales;
import com.develcom.gui.consulta.ConsultaTodos;
import com.develcom.gui.mantenimiento.Mantenimiento;
import com.develcom.gui.reportes.gui.LibreriaReportes;
import com.develcom.gui.reportes.gui.ReporteDetalle;
import com.develcom.gui.reportes.tools.ConstruyeConsultas;
import com.develcom.gui.reportes.tools.Foliatura;
import com.develcom.gui.tools.CentraVentanas;
import com.develcom.gui.tools.MostrarProceso;
import com.develcom.main.DW4JDesktop;
import com.develcom.tools.Constantes;
import com.develcom.tools.ToolsFiles;
import com.develcom.tools.trazas.Traza;
import java.awt.Component;
import java.io.File;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import org.apache.log4j.Level;

/**
 * Ventana principal
 *
 * @author develcom
 */
public class Principal extends JFrame {

    private static final long serialVersionUID = -1261821901440136900L;
    Traza traza = new Traza(Principal.class);

    public Principal() {

        ToolsFiles toolsTiff = new ToolsFiles();
        if (toolsTiff.getDirTemporal().exists()) {
            File[] files = toolsTiff.getDirTemporal().listFiles();
            for (File f : files) {
                if (f.delete()) {
                    traza.trace("eliminado archivo " + f.getName(), Level.INFO);
                } else {
                    traza.trace("problemas al eliminar el archivo " + f.getName(), Level.WARN);
                    f.deleteOnExit();
                }
            }
        }
        setTitle("Sistema de Gesti√≥n Documental - " + ManejoSesion.getLogin() + " ");
        //setIconImage(Toolkit.getDefaultToolkit().getImage("/com/app/win/ventanas/imagenes/DocumentoDigital.gif"));
        //setIconImage(new ImageIcon("/com/app/win/ventanas/imagenes/icon.ico").getImage());
        initComponents();
        mnTipoPersonal.setVisible(false);
        desactivarMenues();
        CentraVentanas.centerMaxFrame(this);
        setVisible(true);
//        JScrollPane jsp = new JScrollPane(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
//        jsp.setViewportView(desktop);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        barraMenu = new javax.swing.JMenuBar();
        mnSesion = new javax.swing.JMenu();
        mnCambioUser = new javax.swing.JMenuItem();
        mnSalir = new javax.swing.JMenuItem();
        mnExpediente = new javax.swing.JMenu();
        mnDigitalizar = new javax.swing.JMenuItem();
        mnCalidad = new javax.swing.JMenu();
        mnAprobar = new javax.swing.JMenuItem();
        mnUpdateIndices = new javax.swing.JMenuItem();
        mnElimnaDoc = new javax.swing.JMenuItem();
        mnConsultar = new javax.swing.JMenu();
        mnBuscar = new javax.swing.JMenuItem();
        mnConsultarTodos = new javax.swing.JMenuItem();
        mnFoliatura = new javax.swing.JMenu();
        mnImprimirFoliatura = new javax.swing.JMenuItem();
        mnReportes = new javax.swing.JMenu();
        mnDocVencense = new javax.swing.JMenuItem();
        mnDocVencidos = new javax.swing.JMenuItem();
        mnDocRechazados = new javax.swing.JMenuItem();
        mnDocPendAprobar = new javax.swing.JMenuItem();
        mnCausaRechazo = new javax.swing.JMenuItem();
        mnDocIndexRechAproPend = new javax.swing.JMenuItem();
        mnCrecimientoIntermensual = new javax.swing.JMenuItem();
        mnReporteDetalles = new javax.swing.JMenu();
        mnCantDocIndexados = new javax.swing.JMenuItem();
        mnDetalleDocIndexados = new javax.swing.JMenuItem();
        mnTipoPersonal = new javax.swing.JMenuItem();
        mnExpedienteEstatus = new javax.swing.JMenuItem();
        mnDocEliminados = new javax.swing.JMenuItem();
        mnAdministrar = new javax.swing.JMenu();
        mnUsuarios = new javax.swing.JMenuItem();
        mnLibreria = new javax.swing.JMenuItem();
        mnCategoria = new javax.swing.JMenuItem();
        mnSubCategoria = new javax.swing.JMenuItem();
        mnTiposDocumentos = new javax.swing.JMenuItem();
        mnIndices = new javax.swing.JMenuItem();
        mnFotoFicha = new javax.swing.JMenuItem();
        mnDatoAdicional = new javax.swing.JMenuItem();
        mnListasDesplegables = new javax.swing.JMenu();
        mnListaDesplegableExpediente = new javax.swing.JMenuItem();
        mnListaDesplegableDatoAdicionale = new javax.swing.JMenuItem();
        mnMantenimiento = new javax.swing.JMenu();
        mnBaseDatos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        desktop.setBackground(new java.awt.Color(204, 204, 204));
        desktop.setPreferredSize(new java.awt.Dimension(1000, 1000));

        mnSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/group.gif"))); // NOI18N
        mnSesion.setMnemonic('s');
        mnSesion.setText("Sesion");

        mnCambioUser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        mnCambioUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/arrow_refresh_small.gif"))); // NOI18N
        mnCambioUser.setMnemonic('u');
        mnCambioUser.setText("Cambiar Usuario");
        mnCambioUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCambioUserActionPerformed(evt);
            }
        });
        mnSesion.add(mnCambioUser);

        mnSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        mnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/door_out.gif"))); // NOI18N
        mnSalir.setMnemonic('s');
        mnSalir.setText("Salir");
        mnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSalirActionPerformed(evt);
            }
        });
        mnSesion.add(mnSalir);

        barraMenu.add(mnSesion);

        mnExpediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/folder_page.gif"))); // NOI18N
        mnExpediente.setMnemonic('e');
        mnExpediente.setText("Expedientes");

        mnDigitalizar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        mnDigitalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Open16.gif"))); // NOI18N
        mnDigitalizar.setMnemonic('d');
        mnDigitalizar.setText("Digitalizar");
        mnDigitalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDigitalizarActionPerformed(evt);
            }
        });
        mnExpediente.add(mnDigitalizar);

        mnCalidad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/tick.png"))); // NOI18N
        mnCalidad.setMnemonic('a');
        mnCalidad.setText("Calidad");

        mnAprobar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        mnAprobar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Crystal_Clear_app_List_manager.png"))); // NOI18N
        mnAprobar.setMnemonic('p');
        mnAprobar.setText("Calidad Documentos");
        mnAprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAprobarActionPerformed(evt);
            }
        });
        mnCalidad.add(mnAprobar);

        mnUpdateIndices.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        mnUpdateIndices.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Crystal_Clear_app_fonts.png"))); // NOI18N
        mnUpdateIndices.setMnemonic('i');
        mnUpdateIndices.setText("Actualiza Indices");
        mnUpdateIndices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnUpdateIndicesActionPerformed(evt);
            }
        });
        mnCalidad.add(mnUpdateIndices);

        mnElimnaDoc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        mnElimnaDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/trash1.png"))); // NOI18N
        mnElimnaDoc.setMnemonic('e');
        mnElimnaDoc.setText("Eliminar Documentos");
        mnElimnaDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnElimnaDocActionPerformed(evt);
            }
        });
        mnCalidad.add(mnElimnaDoc);

        mnExpediente.add(mnCalidad);

        mnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Find16.gif"))); // NOI18N
        mnConsultar.setMnemonic('o');
        mnConsultar.setText("Consultas");

        mnBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK));
        mnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Find16.gif"))); // NOI18N
        mnBuscar.setMnemonic('o');
        mnBuscar.setText("Consulta por Categor√≠as");
        mnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnBuscarActionPerformed(evt);
            }
        });
        mnConsultar.add(mnBuscar);

        mnConsultarTodos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK));
        mnConsultarTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Find16.gif"))); // NOI18N
        mnConsultarTodos.setMnemonic('t');
        mnConsultarTodos.setText("Consulta por Expedientes");
        mnConsultarTodos.setToolTipText("Consultar]Todos los Expedientes");
        mnConsultarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnConsultarTodosActionPerformed(evt);
            }
        });
        mnConsultar.add(mnConsultarTodos);

        mnExpediente.add(mnConsultar);

        barraMenu.add(mnExpediente);

        mnFoliatura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/1344612993_document.png"))); // NOI18N
        mnFoliatura.setText("Foliatura");

        mnImprimirFoliatura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/1344613442_document-edit.png"))); // NOI18N
        mnImprimirFoliatura.setText("Imprimir Foliatura");
        mnImprimirFoliatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnImprimirFoliaturaActionPerformed(evt);
            }
        });
        mnFoliatura.add(mnImprimirFoliatura);

        barraMenu.add(mnFoliatura);

        mnReportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Print.png"))); // NOI18N
        mnReportes.setMnemonic('r');
        mnReportes.setText("Reportes");

        mnDocVencense.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Modify.png"))); // NOI18N
        mnDocVencense.setText("Documentos a Vencerse");
        mnDocVencense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDocVencenseActionPerformed(evt);
            }
        });
        mnReportes.add(mnDocVencense);

        mnDocVencidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Modify.png"))); // NOI18N
        mnDocVencidos.setText("Documentos Vencidos");
        mnDocVencidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDocVencidosActionPerformed(evt);
            }
        });
        mnReportes.add(mnDocVencidos);

        mnDocRechazados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Modify.png"))); // NOI18N
        mnDocRechazados.setText("Documentos Rechazados");
        mnDocRechazados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDocRechazadosActionPerformed(evt);
            }
        });
        mnReportes.add(mnDocRechazados);

        mnDocPendAprobar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Modify.png"))); // NOI18N
        mnDocPendAprobar.setText("Documentos Pendientes por Aprobar");
        mnDocPendAprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDocPendAprobarActionPerformed(evt);
            }
        });
        mnReportes.add(mnDocPendAprobar);

        mnCausaRechazo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Pie Chart.png"))); // NOI18N
        mnCausaRechazo.setText("Causa de Rechazo");
        mnCausaRechazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCausaRechazoActionPerformed(evt);
            }
        });
        mnReportes.add(mnCausaRechazo);

        mnDocIndexRechAproPend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Bar Chart.png"))); // NOI18N
        mnDocIndexRechAproPend.setText("Documentos Digitalizados, Aprobados, Rechazados, Pendientes");
        mnDocIndexRechAproPend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDocIndexRechAproPendActionPerformed(evt);
            }
        });
        mnReportes.add(mnDocIndexRechAproPend);

        mnCrecimientoIntermensual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Line Chart.png"))); // NOI18N
        mnCrecimientoIntermensual.setText("Crecimiento Intermensual de Documentos");
        mnCrecimientoIntermensual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCrecimientoIntermensualActionPerformed(evt);
            }
        });
        mnReportes.add(mnCrecimientoIntermensual);

        mnReporteDetalles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/note.png"))); // NOI18N
        mnReporteDetalles.setText("Reportes Documentos Indexados por Indexador");

        mnCantDocIndexados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Pie Chart.png"))); // NOI18N
        mnCantDocIndexados.setText("Cantidad de Documentos Indexados por Indexador");
        mnCantDocIndexados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCantDocIndexadosActionPerformed(evt);
            }
        });
        mnReporteDetalles.add(mnCantDocIndexados);

        mnDetalleDocIndexados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/note_search.png"))); // NOI18N
        mnDetalleDocIndexados.setText("Detalle de Documentos Indexados por Indexador");
        mnDetalleDocIndexados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDetalleDocIndexadosActionPerformed(evt);
            }
        });
        mnReporteDetalles.add(mnDetalleDocIndexados);

        mnReportes.add(mnReporteDetalles);

        mnTipoPersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Modify.png"))); // NOI18N
        mnTipoPersonal.setText("Expedientes por Tipo de Personal");
        mnTipoPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTipoPersonalActionPerformed(evt);
            }
        });
        mnReportes.add(mnTipoPersonal);

        mnExpedienteEstatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Modify.png"))); // NOI18N
        mnExpedienteEstatus.setText("Expedientes por Estatus y Usuarios");
        mnExpedienteEstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnExpedienteEstatusActionPerformed(evt);
            }
        });
        mnReportes.add(mnExpedienteEstatus);

        mnDocEliminados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/reporte/Modify.png"))); // NOI18N
        mnDocEliminados.setText("Documentos Eliminados");
        mnDocEliminados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDocEliminadosActionPerformed(evt);
            }
        });
        mnReportes.add(mnDocEliminados);

        barraMenu.add(mnReportes);

        mnAdministrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/cog.gif"))); // NOI18N
        mnAdministrar.setMnemonic('a');
        mnAdministrar.setText("Administrar");

        mnUsuarios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        mnUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/user.png"))); // NOI18N
        mnUsuarios.setMnemonic('u');
        mnUsuarios.setText("Usuarios");
        mnUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnUsuariosActionPerformed(evt);
            }
        });
        mnAdministrar.add(mnUsuarios);

        mnLibreria.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
        mnLibreria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/folder_library_alt.png"))); // NOI18N
        mnLibreria.setMnemonic('l');
        mnLibreria.setText("Libreria");
        mnLibreria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLibreriaActionPerformed(evt);
            }
        });
        mnAdministrar.add(mnLibreria);

        mnCategoria.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        mnCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/icon_extension.gif"))); // NOI18N
        mnCategoria.setMnemonic('c');
        mnCategoria.setText("Categoria");
        mnCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCategoriaActionPerformed(evt);
            }
        });
        mnAdministrar.add(mnCategoria);

        mnSubCategoria.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        mnSubCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/list_extensions.gif"))); // NOI18N
        mnSubCategoria.setMnemonic('s');
        mnSubCategoria.setText("SubCategoria");
        mnSubCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSubCategoriaActionPerformed(evt);
            }
        });
        mnAdministrar.add(mnSubCategoria);

        mnTiposDocumentos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK));
        mnTiposDocumentos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Font File Alt.png"))); // NOI18N
        mnTiposDocumentos.setMnemonic('s');
        mnTiposDocumentos.setText("Tipos Documentos");
        mnTiposDocumentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTiposDocumentosActionPerformed(evt);
            }
        });
        mnAdministrar.add(mnTiposDocumentos);

        mnIndices.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        mnIndices.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/table_key.png"))); // NOI18N
        mnIndices.setMnemonic('i');
        mnIndices.setText("Indices");
        mnIndices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnIndicesActionPerformed(evt);
            }
        });
        mnAdministrar.add(mnIndices);

        mnFotoFicha.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        mnFotoFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/page_user_dark.gif"))); // NOI18N
        mnFotoFicha.setMnemonic('f');
        mnFotoFicha.setText("Foto Ficha");
        mnFotoFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFotoFichaActionPerformed(evt);
            }
        });
        mnAdministrar.add(mnFotoFicha);

        mnDatoAdicional.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        mnDatoAdicional.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/dato1.png"))); // NOI18N
        mnDatoAdicional.setMnemonic('a');
        mnDatoAdicional.setText("Datos Adicionales");
        mnDatoAdicional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDatoAdicionalActionPerformed(evt);
            }
        });
        mnAdministrar.add(mnDatoAdicional);

        mnListasDesplegables.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/page_peppermint.png"))); // NOI18N
        mnListasDesplegables.setText("Listas Desplegables");

        mnListaDesplegableExpediente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        mnListaDesplegableExpediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/page_peppermint.png"))); // NOI18N
        mnListaDesplegableExpediente.setMnemonic('d');
        mnListaDesplegableExpediente.setText("Lista Desplegables Indices");
        mnListaDesplegableExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnListaDesplegableExpedienteActionPerformed(evt);
            }
        });
        mnListasDesplegables.add(mnListaDesplegableExpediente);

        mnListaDesplegableDatoAdicionale.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        mnListaDesplegableDatoAdicionale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/page_peppermint.png"))); // NOI18N
        mnListaDesplegableDatoAdicionale.setText("Lista Desplegables Datos Adicionales");
        mnListaDesplegableDatoAdicionale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnListaDesplegableDatoAdicionaleActionPerformed(evt);
            }
        });
        mnListasDesplegables.add(mnListaDesplegableDatoAdicionale);

        mnAdministrar.add(mnListasDesplegables);

        barraMenu.add(mnAdministrar);

        mnMantenimiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/mantenimiento/monitor_16.png"))); // NOI18N
        mnMantenimiento.setText("Mantenimiento");

        mnBaseDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/mantenimiento/Database.png"))); // NOI18N
        mnBaseDatos.setText("Gestor Documental");
        mnBaseDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnBaseDatosActionPerformed(evt);
            }
        });
        mnMantenimiento.add(mnBaseDatos);

        barraMenu.add(mnMantenimiento);

        setJMenuBar(barraMenu);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(desktop, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(desktop, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnCambioUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCambioUserActionPerformed

        Component cdesktop[] = desktop.getComponents();
        ManejoSesion.setExpediente(null);
        ManejoSesion.setSistemaRRHH(null);
        ManejoSesion.setLogin(null);
//        ManejoSesion.setPropedades(null);
        ManejoSesion.setSesion(null);
        ManejoSesion.setNombres(null);
        //ManejoSesion.setRolLogin(null);
        desactivarMenues();
        for (int i = 0; i < cdesktop.length; i++) {
            desktop.remove(cdesktop[i]);
        }
        //Principal.accion="";
        System.gc();
        repaint();
        dispose();
        DW4JDesktop.main(null);
        //Login login = new Login();
        //login.mostrar();

    }//GEN-LAST:event_mnCambioUserActionPerformed

    private void mnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSalirActionPerformed

        desktop.removeAll();
        desktop.repaint();
        desktop.updateUI();
        repaint();

        ToolsFiles toolsTiff = new ToolsFiles();

        int n = JOptionPane.showOptionDialog(this,
                "¬øDesea salir de la aplicaci√≥n?", "Alerta",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, new Object[]{"SI", "NO"}, "NO");
        if (n == JOptionPane.YES_OPTION) {

            //desktop.removeAll();
            if (toolsTiff.getDirTemporal().exists()) {
                File[] files = toolsTiff.getDirTemporal().listFiles();
                for (File f : files) {
                    if (f.delete()) {
                        traza.trace("eliminado archivo " + f.getName(), Level.INFO);
                    } else {
                        traza.trace("problemas al eliminar el archivo " + f.getName(), Level.WARN);
                        f.deleteOnExit();
                    }
                }
            }

            System.gc();
            //Runtime.getRuntime().gc();
            //Runtime.getRuntime().exit(0);
            System.exit(0);
        }
    }//GEN-LAST:event_mnSalirActionPerformed

    private void mnAprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAprobarActionPerformed

        Constantes.ACCION = "APROBAR";
        Constantes.ROL = "APROBADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            Libreria libreria = new Libreria(ManejoSesion.getSesion(), "Seleccionar Libreria - Aprobar");
            desktop.add(libreria);

        }
    }//GEN-LAST:event_mnAprobarActionPerformed

    private void mnLibreriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLibreriaActionPerformed
        //JOptionPane.showMessageDialog(this, "En Desarrollo", "Informacion", JOptionPane.INFORMATION_MESSAGE);

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministrarLibreria al = new AdministrarLibreria();
            desktop.add(al);

        }
    }//GEN-LAST:event_mnLibreriaActionPerformed

    private void mnCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCategoriaActionPerformed
        //JOptionPane.showMessageDialog(this, "En Desarrollo", "Informacion", JOptionPane.INFORMATION_MESSAGE);

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministrarCategoria ac = new AdministrarCategoria();
            desktop.add(ac);

        }


    }//GEN-LAST:event_mnCategoriaActionPerformed

    private void mnSubCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSubCategoriaActionPerformed
        //JOptionPane.showMessageDialog(this, "En Desarrollo", "Informacion", JOptionPane.INFORMATION_MESSAGE);

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministrarSubCategoria asc = new AdministrarSubCategoria();
            desktop.add(asc);

        }


    }//GEN-LAST:event_mnSubCategoriaActionPerformed

    private void mnTiposDocumentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTiposDocumentosActionPerformed
        //JOptionPane.showMessageDialog(this, "En Desarrollo", "Informacion", JOptionPane.INFORMATION_MESSAGE);

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministrarTipoDocumento atd = new AdministrarTipoDocumento();
            desktop.add(atd);

        }


    }//GEN-LAST:event_mnTiposDocumentosActionPerformed

    private void mnIndicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnIndicesActionPerformed

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministrarIndices ai = new AdministrarIndices();
            desktop.add(ai);

        }
    }//GEN-LAST:event_mnIndicesActionPerformed

    private void mnUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnUsuariosActionPerformed

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministrarUsuarios au = new AdministrarUsuarios();
            desktop.add(au);

        }

    }//GEN-LAST:event_mnUsuariosActionPerformed

    private void mnListaDesplegableExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnListaDesplegableExpedienteActionPerformed

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministrarComboExpediente ac = new AdministrarComboExpediente();
            desktop.add(ac);

        }


    }//GEN-LAST:event_mnListaDesplegableExpedienteActionPerformed

    private void mnDigitalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDigitalizarActionPerformed

        Constantes.ACCION = "CAPTURAR";
        Constantes.ROL = "DIGITALIZADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            Libreria libreria = new Libreria(ManejoSesion.getSesion(), "Seleccionar Libreria - Digitalizar");
            desktop.add(libreria);

        }
    }//GEN-LAST:event_mnDigitalizarActionPerformed

    private void mnUpdateIndicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnUpdateIndicesActionPerformed

        Constantes.ACCION = "ACTUALIZAR_INDICES";
        Constantes.ROL = "APROBADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            Libreria libreria = new Libreria(ManejoSesion.getSesion(), "Seleccionar Libreria - Actualizar Indices");
            desktop.add(libreria);

        }

    }//GEN-LAST:event_mnUpdateIndicesActionPerformed

    private void mnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnBuscarActionPerformed

        Constantes.ACCION = "CONSULTAR";
        Constantes.ROL = "CONSULTAR POR CATEGORIA";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        Libreria libreria = new Libreria(ManejoSesion.getSesion(), "Seleccionar Libreria - Busqueda");
        //LibreriaConsulta libreria = new LibreriaConsulta(Principal.thisFrame, ManejoSesion.getSesion());
        desktop.add(libreria);

        //JOptionPane.showMessageDialog(this, "En Desarrollo", "Informacion", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_mnBuscarActionPerformed

    private void mnDocVencenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDocVencenseActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnDocVencense.getText(), ConstruyeConsultas.DOCUMENTO_A_VENCERSE);
        desktop.add(libreria);

    }//GEN-LAST:event_mnDocVencenseActionPerformed

    private void mnCantDocIndexadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCantDocIndexadosActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnCantDocIndexados.getText(), ConstruyeConsultas.CANTIDAD_DOCUMENTO_INDEXADOS_POR_INDEXADOR);
        desktop.add(libreria);

//        ProcesaReporte pr = new ProcesaReporte();
//        pr.crearReporte("CantDocIndexados.jrxml", new HashMap());
    }//GEN-LAST:event_mnCantDocIndexadosActionPerformed

    private void mnDocVencidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDocVencidosActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnDocVencidos.getText(), ConstruyeConsultas.DOCUMENTO_VENCIDOS);
        desktop.add(libreria);
    }//GEN-LAST:event_mnDocVencidosActionPerformed

    private void mnDocRechazadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDocRechazadosActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnDocRechazados.getText(), ConstruyeConsultas.DOCUMENTOS_RECHAZADOS);
        desktop.add(libreria);

    }//GEN-LAST:event_mnDocRechazadosActionPerformed

    private void mnDocPendAprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDocPendAprobarActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnDocPendAprobar.getText(), ConstruyeConsultas.DOCUMENTO_PENDIENTE_POR_APROBAR);
        desktop.add(libreria);
    }//GEN-LAST:event_mnDocPendAprobarActionPerformed

    private void mnCausaRechazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCausaRechazoActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnCausaRechazo.getText(), ConstruyeConsultas.CAUSA_DE_RECHAZO);
        desktop.add(libreria);

    }//GEN-LAST:event_mnCausaRechazoActionPerformed

    private void mnDocIndexRechAproPendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDocIndexRechAproPendActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnDocIndexRechAproPend.getText(), ConstruyeConsultas.DOCUMENTO_INDEXADOS_RECHAZADO_APROBADO_PENDIENTE);
        desktop.add(libreria);
    }//GEN-LAST:event_mnDocIndexRechAproPendActionPerformed

    private void mnCrecimientoIntermensualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCrecimientoIntermensualActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnCrecimientoIntermensual.getText(), ConstruyeConsultas.CRECIMIENTO_INTERMENSUAL_DE_DOCUMENTOS);
        desktop.add(libreria);
    }//GEN-LAST:event_mnCrecimientoIntermensualActionPerformed

    private void mnImprimirFoliaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnImprimirFoliaturaActionPerformed

        Expediente expediente = ManejoSesion.getExpediente();
        final int idLib = expediente.getIdLibreria();
        final int idCat = expediente.getIdCategoria();
        final String idExpediente = expediente.getIdExpediente();

        traza.trace("imprimiendo la foliatura", Level.INFO);
        traza.trace("idLibreria: " + idLib, Level.INFO);
        traza.trace("idCategoria: " + idCat, Level.INFO);
        traza.trace("idExpediente: " + idExpediente, Level.INFO);

        final MostrarProceso proceso = new MostrarProceso("Generando la Foliatura");
        proceso.start();

        new Thread(new Runnable() {
            @Override
            public void run() {
                traza.trace("mostrando la ventana", Level.INFO);
                if (!new Foliatura().generarFoliatura(idLib, idCat, idExpediente)) {
                    JOptionPane.showMessageDialog(new JFrame(), "Problemas para crear la foliatura.\nProbablemente no hay documentos aprobados", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
                proceso.detener();

            }
        }).start();

    }//GEN-LAST:event_mnImprimirFoliaturaActionPerformed

    private void mnBaseDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnBaseDatosActionPerformed

        Constantes.ACCION = "MANTENIMIENTO";
        Constantes.ROL = "MANTENIMIENTO";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        Mantenimiento mbd = new Mantenimiento();
        desktop.add(mbd);


    }//GEN-LAST:event_mnBaseDatosActionPerformed

    private void mnDetalleDocIndexadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDetalleDocIndexadosActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        ReporteDetalle reporteDetalle = new ReporteDetalle(mnDetalleDocIndexados.getText());
        desktop.add(reporteDetalle);

    }//GEN-LAST:event_mnDetalleDocIndexadosActionPerformed

    private void mnFotoFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFotoFichaActionPerformed

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministrarFicha af = new AdministrarFicha();
            desktop.add(af);

        }


    }//GEN-LAST:event_mnFotoFichaActionPerformed

    private void mnExpedienteEstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnExpedienteEstatusActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnExpedienteEstatus.getText(), ConstruyeConsultas.EXPEDIENTE_ESTATUS);
        desktop.add(libreria);


    }//GEN-LAST:event_mnExpedienteEstatusActionPerformed

    private void mnElimnaDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnElimnaDocActionPerformed

        if (ManejoSesion.getConfiguracion().isElimina()) {
            Constantes.ACCION = "ELIMINAR";
            Constantes.ROL = "ELIMINAR";
            desktop.removeAll();
            desktop.repaint();
            System.gc();
            Libreria libreria = new Libreria(ManejoSesion.getSesion(), "Seleccionar Libreria - Eliminar");
            desktop.add(libreria);
        } else {
            mnElimnaDoc.setVisible(false);
            this.barraMenu.updateUI();
            JOptionPane.showMessageDialog(new JFrame(), "Modulo de Eliminacion de Documentos no esta Activo", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnElimnaDocActionPerformed

    private void mnDocEliminadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDocEliminadosActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnDocEliminados.getText(), ConstruyeConsultas.DOCUMENTO_ELIMINADO);
        desktop.add(libreria);

    }//GEN-LAST:event_mnDocEliminadosActionPerformed

    private void mnDatoAdicionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDatoAdicionalActionPerformed

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministraDatosAdicionales da = new AdministraDatosAdicionales();
            desktop.add(da);

        }

    }//GEN-LAST:event_mnDatoAdicionalActionPerformed

    private void mnListaDesplegableDatoAdicionaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnListaDesplegableDatoAdicionaleActionPerformed

        Constantes.ACCION = "ADMINISTRAR";
        Constantes.ROL = "ADMINISTRADOR";
        desktop.removeAll();
        desktop.repaint();
        System.gc();

        if (evt.getModifiers() == 0 || evt.getModifiers() == 16) {
            AdministrarComboDatosAdicionales da = new AdministrarComboDatosAdicionales();
            desktop.add(da);

        }
    }//GEN-LAST:event_mnListaDesplegableDatoAdicionaleActionPerformed

    private void mnTipoPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTipoPersonalActionPerformed

        Constantes.ACCION = "REPORTES";
        Constantes.ROL = "REPORTES";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        LibreriaReportes libreria = new LibreriaReportes(ManejoSesion.getSesion(), "Seleccionar Libreria - Reporte " + mnTipoPersonal.getText(), ConstruyeConsultas.TIPO_PERSONAL);
        desktop.add(libreria);
    }//GEN-LAST:event_mnTipoPersonalActionPerformed

    private void mnConsultarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnConsultarTodosActionPerformed

        Constantes.ACCION = "CONSULTAR";
        Constantes.ROL = "CONSULTAR POR EXPEDIENTE";
        desktop.removeAll();
        desktop.repaint();
        System.gc();
        ConsultaTodos libreria = new ConsultaTodos();
        //LibreriaConsulta libreria = new LibreriaConsulta(Principal.thisFrame, ManejoSesion.getSesion());
        desktop.add(libreria);

    }//GEN-LAST:event_mnConsultarTodosActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barraMenu;
    public static javax.swing.JDesktopPane desktop;
    private javax.swing.JMenu mnAdministrar;
    private javax.swing.JMenuItem mnAprobar;
    private javax.swing.JMenuItem mnBaseDatos;
    private javax.swing.JMenuItem mnBuscar;
    private javax.swing.JMenu mnCalidad;
    private javax.swing.JMenuItem mnCambioUser;
    private javax.swing.JMenuItem mnCantDocIndexados;
    private javax.swing.JMenuItem mnCategoria;
    private javax.swing.JMenuItem mnCausaRechazo;
    private javax.swing.JMenu mnConsultar;
    private javax.swing.JMenuItem mnConsultarTodos;
    private javax.swing.JMenuItem mnCrecimientoIntermensual;
    private javax.swing.JMenuItem mnDatoAdicional;
    private javax.swing.JMenuItem mnDetalleDocIndexados;
    private javax.swing.JMenuItem mnDigitalizar;
    private javax.swing.JMenuItem mnDocEliminados;
    private javax.swing.JMenuItem mnDocIndexRechAproPend;
    private javax.swing.JMenuItem mnDocPendAprobar;
    private javax.swing.JMenuItem mnDocRechazados;
    private javax.swing.JMenuItem mnDocVencense;
    private javax.swing.JMenuItem mnDocVencidos;
    private javax.swing.JMenuItem mnElimnaDoc;
    private javax.swing.JMenu mnExpediente;
    private javax.swing.JMenuItem mnExpedienteEstatus;
    private javax.swing.JMenu mnFoliatura;
    private javax.swing.JMenuItem mnFotoFicha;
    private javax.swing.JMenuItem mnImprimirFoliatura;
    private javax.swing.JMenuItem mnIndices;
    private javax.swing.JMenuItem mnLibreria;
    private javax.swing.JMenuItem mnListaDesplegableDatoAdicionale;
    private javax.swing.JMenuItem mnListaDesplegableExpediente;
    private javax.swing.JMenu mnListasDesplegables;
    private javax.swing.JMenu mnMantenimiento;
    private javax.swing.JMenu mnReporteDetalles;
    private javax.swing.JMenu mnReportes;
    private javax.swing.JMenuItem mnSalir;
    private javax.swing.JMenu mnSesion;
    private javax.swing.JMenuItem mnSubCategoria;
    private javax.swing.JMenuItem mnTipoPersonal;
    private javax.swing.JMenuItem mnTiposDocumentos;
    private javax.swing.JMenuItem mnUpdateIndices;
    private javax.swing.JMenuItem mnUsuarios;
    // End of variables declaration//GEN-END:variables

    private void desactivarMenues() {
        mnAdministrar.setVisible(false);
        mnCalidad.setVisible(false);
        mnCategoria.setVisible(false);
        mnDigitalizar.setVisible(false);
        mnExpediente.setVisible(false);
        mnIndices.setVisible(false);
        mnLibreria.setVisible(false);
        mnSubCategoria.setVisible(false);
        mnTiposDocumentos.setVisible(false);
        mnListaDesplegableExpediente.setVisible(false);
        mnFoliatura.setVisible(false);
        mnReportes.setVisible(false);
        mnMantenimiento.setVisible(false);
        mnBaseDatos.setVisible(false);
        mnUpdateIndices.setVisible(false);
        mnElimnaDoc.setVisible(false);
        mnUpdateIndices.setVisible(false);
        mnConsultar.setVisible(false);
        mnBuscar.setVisible(false);
        mnConsultarTodos.setVisible(false);
    }

    public void menuesCalidad() {

        mnDocRechazados.setVisible(true);
        mnDocPendAprobar.setVisible(true);
        mnCausaRechazo.setVisible(true);
        mnDocIndexRechAproPend.setVisible(true);
    }

    public JMenu getMnExpediente() {
        return mnExpediente;
    }

    public JMenu getMnSesion() {
        return mnSesion;
    }

    public JMenuItem getMnBuscar() {
        return mnBuscar;
    }

    public JMenuItem getMnCambioUser() {
        return mnCambioUser;
    }

    public JMenuItem getMnCategoria() {
        return mnCategoria;
    }

    public JMenuItem getMnDigitalizar() {
        return mnDigitalizar;
    }

    public JMenuItem getMnIndices() {
        return mnIndices;
    }

    public JMenuItem getMnLibreria() {
        return mnLibreria;
    }

    public JMenuItem getMnSalir() {
        return mnSalir;
    }

    public JMenuItem getMnSubCategoria() {
        return mnSubCategoria;
    }

    public JMenuItem getMnTiposDocumentos() {
        return mnTiposDocumentos;
    }

    public JMenu getMnAdministrar() {
        return mnAdministrar;
    }

    public JMenuItem getMnCalidad() {
        return mnCalidad;
    }

    public JMenuItem getMnUsuarios() {
        return mnUsuarios;
    }

    public JMenuItem getMnListaDesplegable() {
        return mnListaDesplegableExpediente;
    }

    public JMenu getMnReportes() {
        return mnReportes;
    }

    public JMenuItem getMnBaseDatos() {
        return mnBaseDatos;
    }

    public JMenu getMnMantenimiento() {
        return mnMantenimiento;
    }

    public JMenuItem getMnCantDocIndexados() {
        return mnCantDocIndexados;
    }

    public JMenuItem getMnCausaRechazo() {
        return mnCausaRechazo;
    }

    public JMenuItem getMnCrecimientoIntermensual() {
        return mnCrecimientoIntermensual;
    }

    public JMenuItem getMnDetalleDocIndexados() {
        return mnDetalleDocIndexados;
    }

    public JMenuItem getMnDocIndexRechAproPend() {
        return mnDocIndexRechAproPend;
    }

    public JMenuItem getMnDocPendAprobar() {
        return mnDocPendAprobar;
    }

    public JMenuItem getMnDocRechazados() {
        return mnDocRechazados;
    }

    public JMenuItem getMnDocVencense() {
        return mnDocVencense;
    }

    public JMenuItem getMnDocVencidos() {
        return mnDocVencidos;
    }

    public JMenu getMnFoliatura() {
        return mnFoliatura;
    }

    public JMenuItem getMnFotoFicha() {
        return mnFotoFicha;
    }

    public JMenuItem getMnElimnaDoc() {
        return mnElimnaDoc;
    }

    public JMenuItem getMnUpdateIndices() {
        return mnUpdateIndices;
    }

    public JMenu getMnConsultar() {
        return mnConsultar;
    }

    public JMenuItem getMnConsultarTodos() {
        return mnConsultarTodos;
    }
}

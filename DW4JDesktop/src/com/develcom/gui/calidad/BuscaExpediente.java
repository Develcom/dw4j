/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BuscaExpediente.java
 *
 * Created on 12/06/2012, 01:11:57 PM
 */
package com.develcom.gui.calidad;

import com.develcom.administracion.SubCategoria;
import com.develcom.calidad.ConsultaDinamica;
import com.develcom.dao.Expediente;
import com.develcom.dao.ManejoSesion;
import com.develcom.expediente.TipoDocumento;
import com.develcom.gui.Libreria;
import com.develcom.gui.Principal;
import com.develcom.gui.tools.Autocompletar;
import com.develcom.gui.tools.CentraVentanas;
import com.develcom.gui.tools.MostrarProceso;
import com.develcom.tools.Constantes;
import com.develcom.tools.trazas.Traza;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.soap.SOAPException;
import org.apache.log4j.Level;
import ve.com.develcom.administracion.AdministracionBusqueda;
import ve.com.develcom.aprueba.CalidadDocumento;

/**
 *
 * @author develcom
 */
public class BuscaExpediente extends javax.swing.JInternalFrame {

    private static final long serialVersionUID = 1968855004460341654L;
    private Traza traza = new Traza(BuscaExpediente.class);
    /**
     * Informacion del expediente
     */
    private Expediente expediente;
    private List<com.develcom.expediente.Expedientes> autocompletarExpedientes;
    private Autocompletar autocompletar = new Autocompletar();

    /**
     * Creates new form BuscaExpediente
     */
    public BuscaExpediente() {
        try {

            expediente = ManejoSesion.getExpediente();
            initComponents();
            grupoBuscar.add(rbBusquedaSimple);
            grupoBuscar.add(rbListadoPeriodo);
            grupoBuscar.add(rbListadoPendiente);
            CentraVentanas.centrar(this, Principal.desktop);

            if (Constantes.ACCION.equalsIgnoreCase("ELIMINAR")) {
                setTitle("Buscar Expedientes para Eliminar");
            } else {
                setTitle("Buscar Expedientes para Calidad");
            }
            setVisible(true);

        } catch (Exception ex) {
            traza.trace("problemas al buscar los argumentos", Level.ERROR, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBuscar = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jtIdExpediente = new javax.swing.JTextField();
        lblIdExpediente = new javax.swing.JLabel();
        rbBusquedaSimple = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        rbListadoPendiente = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        rbListadoPeriodo = new javax.swing.JRadioButton();
        lblFechaDesde = new javax.swing.JLabel();
        lblFechaHasta = new javax.swing.JLabel();
        jdFechaDesde = new com.toedter.calendar.JDateChooser();
        jdFechaHasta = new com.toedter.calendar.JDateChooser();
        jButtonRegresar = new javax.swing.JButton();
        jButtonAceptar = new javax.swing.JButton();

        setBackground(new java.awt.Color(224, 239, 255));
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setAutoscrolls(true);

        jPanel2.setBackground(new java.awt.Color(224, 239, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jtIdExpediente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtIdExpedienteKeyReleased(evt);
            }
        });

        lblIdExpediente.setText("Id Expediente");

        rbBusquedaSimple.setBackground(new java.awt.Color(224, 239, 255));
        rbBusquedaSimple.setText("Busqueda simple");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblIdExpediente)
                        .addGap(18, 18, 18)
                        .addComponent(jtIdExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rbBusquedaSimple))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(rbBusquedaSimple)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdExpediente)
                    .addComponent(jtIdExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(224, 239, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        rbListadoPendiente.setBackground(new java.awt.Color(224, 239, 255));
        rbListadoPendiente.setText("Listado pendiente");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbListadoPendiente)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbListadoPendiente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(224, 239, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        rbListadoPeriodo.setBackground(new java.awt.Color(224, 239, 255));
        rbListadoPeriodo.setText("Listado periodo");

        lblFechaDesde.setText("Fecha desde");

        lblFechaHasta.setText("Fecha hasta");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFechaDesde)
                            .addComponent(lblFechaHasta))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jdFechaHasta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdFechaDesde, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(rbListadoPeriodo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbListadoPeriodo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFechaDesde)
                    .addComponent(jdFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFechaHasta))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Knob Cancel.png"))); // NOI18N
        jButtonRegresar.setMnemonic('c');
        jButtonRegresar.setText("Cancelar");
        jButtonRegresar.setToolTipText("Cancelar");
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });

        jButtonAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Knob Valid Green.png"))); // NOI18N
        jButtonAceptar.setMnemonic('a');
        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.setToolTipText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jButtonRegresar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAceptar)
                    .addComponent(jButtonRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        buscar();
}//GEN-LAST:event_jButtonAceptarActionPerformed

    private void buscar() {
        final MostrarProceso proceso = new MostrarProceso("Buscando Expediente(s) ");
        proceso.start();
        //proceso.mensaje("Armando los arboles");
        new Thread(new Runnable() {
            @Override
            public void run() {
                aceptar();
                proceso.detener();
            }
        }).start();
    }

    private void aceptar() {

        String usuario;
        //SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        GregorianCalendar fechaDesde;
        XMLGregorianCalendar fechaXMLDesde = null;
        XMLGregorianCalendar fechaXMLHasta = null;
        GregorianCalendar fechaHasta;
        String idExpediente;
        List<ConsultaDinamica> consultaDinamicas = new ArrayList<>();
        List<TipoDocumento> listaTipoDoc = new ArrayList<>();
        boolean flag = true;

        try {
            consultaDinamicas.clear();
            usuario = ManejoSesion.getLogin();

            expediente.setTipoDocumentos(listaTipoDoc);

            traza.trace("buscando documentos pendientes basado en el usuario " + usuario, Level.INFO);
            if (rbBusquedaSimple.isSelected()) {
                idExpediente = jtIdExpediente.getText();
                if (!idExpediente.equalsIgnoreCase("")) {
                    consultaDinamicas = new CalidadDocumento().buscarDocumentosPendientes(usuario, null, null, 0, expediente.getIdCategoria(), idExpediente);
                } else {
                    flag = false;
                    JOptionPane.showMessageDialog(this, "Debe colocar el id del Expediente", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            } else if (rbListadoPeriodo.isSelected()) {

                fechaDesde = (GregorianCalendar) jdFechaDesde.getCalendar();
                fechaHasta = (GregorianCalendar) jdFechaHasta.getCalendar();

                if ((fechaDesde != null) && (fechaHasta != null)) {
                    fechaXMLDesde = DatatypeFactory.newInstance().newXMLGregorianCalendar(fechaDesde);
                    fechaXMLHasta = DatatypeFactory.newInstance().newXMLGregorianCalendar(fechaHasta);

                    consultaDinamicas = new CalidadDocumento().buscarDocumentosPendientes(usuario, fechaXMLDesde, fechaXMLHasta, 0, expediente.getIdCategoria(), null);

                } else if (fechaDesde != null) {

                    fechaXMLDesde = DatatypeFactory.newInstance().newXMLGregorianCalendar(fechaDesde);

                    consultaDinamicas = new CalidadDocumento().buscarDocumentosPendientes(usuario, fechaXMLDesde, fechaXMLHasta, 0, expediente.getIdCategoria(), null);

                } else if (fechaHasta != null) {

                    fechaXMLHasta = DatatypeFactory.newInstance().newXMLGregorianCalendar(fechaHasta);

                    consultaDinamicas = new CalidadDocumento().buscarDocumentosPendientes(usuario, fechaXMLDesde, fechaXMLHasta, 0, expediente.getIdCategoria(), null);
                } else {
                    flag = false;
                    JOptionPane.showMessageDialog(this, "Debe seleccionar alguna fecha", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }

            } else if (rbListadoPendiente.isSelected()) {

                consultaDinamicas = new CalidadDocumento().buscarDocumentosPendientes(usuario, null, null, 0, expediente.getIdCategoria(), null);

            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un tipo de busqueda", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }

            if (flag) {
                if (!consultaDinamicas.isEmpty()) {
                    if (consultaDinamicas.get(0).isExiste()) {
                        this.dispose();
                        ResultadoExpedienteCalidad re = new ResultadoExpedienteCalidad();
                        re.setConsultaDinamicasAprobar(consultaDinamicas);
                        re.convertir();

                        List<SubCategoria> listaSubCategorias = new AdministracionBusqueda().buscarSubCategoria(null, expediente.getIdCategoria(), 0);
                        expediente.setSubCategorias(listaSubCategorias);
                        ManejoSesion.setExpediente(expediente);

                        Principal.desktop.add(re);
                    } else {
                        //JOptionPane.showMessageDialog(this, "No se encontraron expedientes asociados al idExpediente ingresado", "Advertencia", JOptionPane.WARNING_MESSAGE);
                        JOptionPane.showMessageDialog(this, "No existen Expedientes asociados a la busqueda", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No existen expedientes de acuerdo \ncon los parámetros indicados", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    //JOptionPane.showMessageDialog(this, "No se encontraron expedientes asociados al idExpediente ingresado", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            }

        } catch (DatatypeConfigurationException e) {
            traza.trace("problemas al convertir fechas", Level.ERROR, e);
        } catch (SOAPException e) {
            traza.trace("error en la busqueda", Level.ERROR, e);
        }

    }

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed

        Principal.desktop.add(new Libreria(ManejoSesion.getSesion(), "Seleccionar Libreria - Aprobar"));
        dispose();
}//GEN-LAST:event_jButtonRegresarActionPerformed

    private void jtIdExpedienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIdExpedienteKeyReleased

        rbBusquedaSimple.setSelected(true);
        if (!(evt.getKeyCode() >= 65 && evt.getKeyCode() <= 90
                || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                || evt.getKeyCode() == KeyEvent.VK_ENTER)) {
            return;
        }

//        if (jtIdExpediente.getText().isEmpty()) {
//            return;
//        }
//        if (autocompletarExpedientes.isEmpty()) {
//            return;
//        }
//        autocompletar.addTexto(jtIdExpediente, autocompletar.getTextoListaExpediente(jtIdExpediente.getText(), autocompletarExpedientes));

    }//GEN-LAST:event_jtIdExpedienteKeyReleased
//    private void addTexto(JTextField textField, String newDato){
//
//        String datoBuscado = "";
//        int nroActual = textField.getText().length();
//
//        traza.trace("nuevo dato "+newDato, Level.INFO);
//        datoBuscado = newDato.substring(nroActual, newDato.length());
//
//        if(newDato.isEmpty() || datoBuscado.isEmpty()){
//            return;
//        }
//
//        try {
//            traza.trace("dato buscado "+datoBuscado, Level.INFO);
//            textField.getDocument().insertString(textField.getCaretPosition(), datoBuscado, null);
//        } catch (Exception e) {
//            traza.trace("error al insertar el dato", Level.ERROR, e);
//        }
//
//        textField.select(nroActual, textField.getText().length());
//    }
//
//    private String getTextoLista(String datoBuscar, List<String> veDatos){
//
//        int nroPosicion = getPosicionLista(datoBuscar, veDatos);
//
//        if (nroPosicion == -1) {
//            traza.trace("dato a buscar "+datoBuscar, Level.INFO);
//            return datoBuscar;
//        }
//        //return veDatos[nroPosicion];
//
//        return veDatos.get(nroPosicion);
//    }
//
//
//    private int getPosicionLista(String datoBuscar, List<String> veDatos){
//
//        try {
//            for (int i = 0; i < veDatos.size(); i++) {
//
//                if(datoBuscar.equalsIgnoreCase(veDatos.get(i).substring(0, datoBuscar.length()))){
//                    traza.trace("posicion "+i, Level.INFO);
//                    return i;
//                }
//
//            }
//        } catch (Exception e) {
//            //traza.trace("error al obtener la posicion del vector", Level.ERROR, e);
//        }
//        return -1;
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoBuscar;
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private com.toedter.calendar.JDateChooser jdFechaDesde;
    private com.toedter.calendar.JDateChooser jdFechaHasta;
    private javax.swing.JTextField jtIdExpediente;
    private javax.swing.JLabel lblFechaDesde;
    private javax.swing.JLabel lblFechaHasta;
    private javax.swing.JLabel lblIdExpediente;
    private javax.swing.JRadioButton rbBusquedaSimple;
    private javax.swing.JRadioButton rbListadoPendiente;
    private javax.swing.JRadioButton rbListadoPeriodo;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.develcom.gui.consulta.ficha;

import com.develcom.dao.ManejoSesion;
import com.develcom.documento.Bufer;
import com.develcom.excepcion.DW4JDesktopExcepcion;
import com.develcom.expediente.Indice;
import com.develcom.expediente.InfoDocumento;
import com.develcom.gui.Principal;
import com.develcom.gui.tools.CentraVentanas;
import com.develcom.gui.tools.CreaObjetosDinamicos;
import com.develcom.tools.ToolsFiles;
import com.develcom.tools.trazas.Traza;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileOutputStream;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.apache.log4j.Level;
import ve.com.develcom.archivo.GestionArchivos;
import ve.com.develcom.busquedadinamica.BuscaExpedienteDinamico;

/**
 *
 * @author develcom
 */
public class Ficha extends javax.swing.JInternalFrame implements Printable {

    private Traza traza = new Traza(Ficha.class);
    private List<Indice> listaIndice = null;
    private String rutaTemp;
    private Component comp = this;

    /**
     * Creates new form Ficha
     */
    public Ficha(List<Indice> listaIndice) {
        this.listaIndice = listaIndice;
        initComponents();
        CentraVentanas.centrar(this, Principal.desktop);
        cargarFoto();
        crearObjectos();
        setVisible(true);
    }

    private void cargarFoto() {
        ToolsFiles toolsFile = new ToolsFiles();
        //PanelImagen panelImagen = new PanelImagen();
        FileOutputStream escribiendo;
        InfoDocumento infoDocumento;
        String idExpediente;
        File fileCod;
        Bufer buffer;

        try {
            fileCod = new File(toolsFile.getArchivoCodificado());
            rutaTemp = toolsFile.getDirTemporal().toString();
            idExpediente = ManejoSesion.getExpediente().getIdExpediente();


            infoDocumento = new BuscaExpedienteDinamico().buscarFotoFicha(idExpediente);

            if ((infoDocumento != null) && (infoDocumento.getEstatus() != 0) && (infoDocumento.getEstatus() != 2)) {

                if (infoDocumento.getRutaArchivo() == null) {
                    throw new DW4JDesktopExcepcion("Falta informaci√≥n del documento");
                }
                //byte[] buffer = new GestionArchivos().buscandoArchivo(infoDocumento.getRutaArchivo(), infoDocumento.getNombreArchivo());
                buffer = new GestionArchivos().buscandoArchivo(infoDocumento.getRutaArchivo(), infoDocumento.getNombreArchivo());

                if (buffer == null) {
                    throw new DW4JDesktopExcepcion("Problemas al buscar el fisico del documento\nComuniquese con el administrador del sistema");
                }

                escribiendo = new FileOutputStream(fileCod);
                //escribiendo.write(buffer);
                escribiendo.write(buffer.getBufer());
                escribiendo.flush();
                escribiendo.close();

                toolsFile.decodificar("foto.jpg");

                Image imageFoto = new ImageIcon(rutaTemp + "/foto.jpg").getImage();

                panelFoto.setImagen(imageFoto);
            } else {
                JOptionPane.showMessageDialog(this, "Problemas al buscar la foto del expediente\nPosiblemente no existe, \nno esta configurado o\nno esta aprobado", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problemas al buscar la foto del expediente\nPosiblemente no existe o\nno esta configurado o\nno esta aprobado\n" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            traza.trace("problema al cargar la foto", Level.INFO, ex);
        }

    }

    private void crearObjectos() {
        CreaObjetosDinamicos cod = new CreaObjetosDinamicos();

        panelDatos.removeAll();
        panelDatos.setLayout(new FlowLayout(FlowLayout.CENTER));
        panelDatos.add(cod.mostrarIndices(listaIndice));
        panelDatos.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelImagen1 = new com.develcom.tools.PanelImagen();
        jButtonRegresar = new javax.swing.JButton();
        btImprimir = new javax.swing.JButton();
        panelPrincipal = new javax.swing.JPanel();
        panelTitulo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelDatos = new javax.swing.JPanel();
        panelFoto = new com.develcom.tools.PanelImagen();

        javax.swing.GroupLayout panelImagen1Layout = new javax.swing.GroupLayout(panelImagen1);
        panelImagen1.setLayout(panelImagen1Layout);
        panelImagen1Layout.setHorizontalGroup(
            panelImagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panelImagen1Layout.setVerticalGroup(
            panelImagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(224, 239, 255));
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Ficha Expediente");

        jButtonRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Knob Cancel.png"))); // NOI18N
        jButtonRegresar.setMnemonic('a');
        jButtonRegresar.setText("Cancelar");
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });

        btImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develcom/gui/imagenes/develcom/Printer.png"))); // NOI18N
        btImprimir.setMnemonic('p');
        btImprimir.setText("Imprimir");
        btImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirActionPerformed(evt);
            }
        });

        panelTitulo.setBackground(new java.awt.Color(224, 239, 255));
        panelTitulo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FICHA DEL FUNCIONARIO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(224, 239, 255));
        jScrollPane1.setBorder(null);

        panelDatos.setBackground(new java.awt.Color(224, 239, 255));

        javax.swing.GroupLayout panelDatosLayout = new javax.swing.GroupLayout(panelDatos);
        panelDatos.setLayout(panelDatosLayout);
        panelDatosLayout.setHorizontalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
        panelDatosLayout.setVerticalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 452, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panelDatos);

        javax.swing.GroupLayout panelFotoLayout = new javax.swing.GroupLayout(panelFoto);
        panelFoto.setLayout(panelFotoLayout);
        panelFotoLayout.setHorizontalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 169, Short.MAX_VALUE)
        );
        panelFotoLayout.setVerticalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 168, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelTituloLayout = new javax.swing.GroupLayout(panelTitulo);
        panelTitulo.setLayout(panelTituloLayout);
        panelTituloLayout.setHorizontalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelTituloLayout.setVerticalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addComponent(panelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(btImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRegresar)
                .addGap(184, 184, 184))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    private void btImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirActionPerformed

        Book libro = new Book();
        PrinterJob job;
        Paper paper = new Paper();
        PageFormat pformat = PrinterJob.getPrinterJob().defaultPage();
        try {
            job = PrinterJob.getPrinterJob();
            //pformat.setPaper(paper);
            //libro.append(this, job.defaultPage());
            //job.setPageable(libro);
            job.setJobName("Ficha Funcionario");
            job.setPrintable(this);
            if (job.printDialog()) {
                job.print();
            }
        } catch (PrinterException ex) {
            traza.trace("error al imprimir", Level.ERROR, ex);
            JOptionPane.showMessageDialog(this, "Error al imprimir", "Error...", JOptionPane.DEFAULT_OPTION + JOptionPane.ERROR_MESSAGE);
        }

//        Font fuente = new Font("Dialog", Font.PLAIN, 10);
//        PrintJob pj;
//        Graphics pagina;
//
//        pj = Toolkit.getDefaultToolkit().getPrintJob(new Frame(), "SCAT", null);

//        try {
//            pagina = pj.getGraphics();
//            pagina.setFont(fuente);
//            pagina.setColor(Color.black);
//
//            pagina.drawString("hola", 60, 60);
//
//            pagina.dispose();
//            pj.end();
//        } catch (Exception e) {
//            System.out.println("LA IMPRESION HA SIDO CANCELADA...");
//        }


//        PrintService service = PrintServiceLookup.lookupDefaultPrintService();
//        
//        //Indicamos que lo que vamos a imprimir es un objeto imprimible
//        DocFlavor flavor = DocFlavor.SERVICE_FORMATTED.PRINTABLE;
//        DocPrintJob pjd = service.createPrintJob();
//        
//        //Creamos el documento a imprimir que contendr√° el objeto
//        Doc doc = new SimpleDoc(panelPrincipal, flavor, null);
//
//        try {
//            pjd.print(doc, null);
//        } catch (PrintException e) {
//            System.out.println("Error al imprimir: " + e.getMessage());
//        }


    }//GEN-LAST:event_btImprimirActionPerformed

    @Override
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {

        if (pageIndex > 0) {
            return NO_SUCH_PAGE;
        }

        Graphics2D g2d = (Graphics2D) graphics;
//        
//        //Punto donde empezar√° a imprimir dentro la pagina (100, 50)
//        g2d.translate(pageFormat.getImageableX()+100, pageFormat.getImageableY()+50);
        g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
//        
//        //g2d.scale(0.9, 0.9); //Reducci√≥n de la impresi√≥n al 50%
        g2d.scale(0.80, 0.80); //Reducci√≥n de la impresi√≥n al 50%
//        
//        panelPrincipal.printAll(graphics);
//        //panelPrincipal.printComponents(graphics);


        // get the bounds of the component
//        Dimension dim = comp.getSize();
//        double cHeight = dim.getHeight();
//        double cWidth = dim.getWidth();
//
//        // get the bounds of the printable area
//        double pHeight = pageFormat.getImageableHeight();
//        double pWidth = pageFormat.getImageableWidth();
//
//        double pXStart = pageFormat.getImageableX();
//        double pYStart = pageFormat.getImageableY();
//
//        double xRatio = pWidth / cWidth;
//        double yRatio = pHeight / cHeight;
//
//        g2d.translate(pXStart, pYStart);
//        g2d.scale(xRatio, yRatio);
        //comp.paint(g2d);
        panelPrincipal.printAll(graphics);

        return PAGE_EXISTS;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btImprimir;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelDatos;
    private com.develcom.tools.PanelImagen panelFoto;
    private com.develcom.tools.PanelImagen panelImagen1;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelTitulo;
    // End of variables declaration//GEN-END:variables
}
